require.config({"config": {
        "jsbuild":{"varien/js.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\nfunction popWin(url, win, para) {\n    var win = window.open(url, win, para);\n\n    win.focus();\n}\n\nfunction setLocation(url) {\n    window.location.href = url;\n}\n\nfunction setPLocation(url, setFocus) {\n    if (setFocus) {\n        window.opener.focus();\n    }\n    window.opener.location.href = url;\n}\n\nfunction setLanguageCode(code, fromCode) {\n    //TODO: javascript cookies have different domain and path than php cookies\n    var href = window.location.href;\n    var after = '',\n dash;\n\n    if (dash = href.match(/\\#(.*)$/)) {\n        href = href.replace(/\\#(.*)$/, '');\n        after = dash[0];\n    }\n\n    if (href.match(/[?]/)) {\n        var re = /([?&]store=)[a-z0-9_]*/;\n\n        if (href.match(re)) {\n            href = href.replace(re, '$1' + code);\n        } else {\n            href += '&store=' + code;\n        }\n\n        var re = /([?&]from_store=)[a-z0-9_]*/;\n\n        if (href.match(re)) {\n            href = href.replace(re, '');\n        }\n    } else {\n        href += '?store=' + code;\n    }\n\n    if (typeof fromCode != 'undefined') {\n        href += '&from_store=' + fromCode;\n    }\n    href += after;\n\n    setLocation(href);\n}\n\n/**\n * Add classes to specified elements.\n * Supported classes are: 'odd', 'even', 'first', 'last'\n *\n * @param elements - array of elements to be decorated\n * [@param decorateParams] - array of classes to be set. If omitted, all available will be used\n */\nfunction decorateGeneric(elements, decorateParams) {\n    var allSupportedParams = ['odd', 'even', 'first', 'last'];\n    var _decorateParams = {};\n    var total = elements.length;\n\n    if (total) {\n        // determine params called\n        if (typeof decorateParams == 'undefined') {\n            decorateParams = allSupportedParams;\n        }\n\n        if (!decorateParams.length) {\n            return;\n        }\n\n        for (var k in allSupportedParams) {\n            _decorateParams[allSupportedParams[k]] = false;\n        }\n\n        for (var k in decorateParams) {\n            _decorateParams[decorateParams[k]] = true;\n        }\n\n        // decorate elements\n        // elements[0].addClassName('first'); // will cause bug in IE (#5587)\n        if (_decorateParams.first) {\n            Element.addClassName(elements[0], 'first');\n        }\n\n        if (_decorateParams.last) {\n            Element.addClassName(elements[total - 1], 'last');\n        }\n\n        for (var i = 0; i < total; i++) {\n            if ((i + 1) % 2 == 0) {\n                if (_decorateParams.even) {\n                    Element.addClassName(elements[i], 'even');\n                }\n            } else if (_decorateParams.odd) {\n                Element.addClassName(elements[i], 'odd');\n            }\n        }\n    }\n}\n\n/**\n * Decorate table rows and cells, tbody etc\n * @see decorateGeneric()\n */\nfunction decorateTable(table, options) {\n    var table = $(table);\n\n    if (table) {\n        // set default options\n        var _options = {\n            'tbody': false,\n            'tbody tr': ['odd', 'even', 'first', 'last'],\n            'thead tr': ['first', 'last'],\n            'tfoot tr': ['first', 'last'],\n            'tr td': ['last']\n        };\n        // overload options\n\n        if (typeof options != 'undefined') {\n            for (var k in options) {\n                _options[k] = options[k];\n            }\n        }\n        // decorate\n        if (_options['tbody']) {\n            decorateGeneric(table.select('tbody'), _options['tbody']);\n        }\n\n        if (_options['tbody tr']) {\n            decorateGeneric(table.select('tbody tr'), _options['tbody tr']);\n        }\n\n        if (_options['thead tr']) {\n            decorateGeneric(table.select('thead tr'), _options['thead tr']);\n        }\n\n        if (_options['tfoot tr']) {\n            decorateGeneric(table.select('tfoot tr'), _options['tfoot tr']);\n        }\n\n        if (_options['tr td']) {\n            var allRows = table.select('tr');\n\n            if (allRows.length) {\n                for (var i = 0; i < allRows.length; i++) {\n                    decorateGeneric(allRows[i].getElementsByTagName('TD'), _options['tr td']);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Set \"odd\", \"even\" and \"last\" CSS classes for list items\n * @see decorateGeneric()\n */\nfunction decorateList(list, nonRecursive) {\n    if ($(list)) {\n        if (typeof nonRecursive == 'undefined') {\n            var items = $(list).select('li');\n        } else {\n            var items = $(list).childElements();\n        }\n        decorateGeneric(items, ['odd', 'even', 'last']);\n    }\n}\n\n/**\n * Set \"odd\", \"even\" and \"last\" CSS classes for list items\n * @see decorateGeneric()\n */\nfunction decorateDataList(list) {\n    list = $(list);\n\n    if (list) {\n        decorateGeneric(list.select('dt'), ['odd', 'even', 'last']);\n        decorateGeneric(list.select('dd'), ['odd', 'even', 'last']);\n    }\n}\n\n/**\n * Parse SID and produces the correct URL\n */\nfunction parseSidUrl(baseUrl, urlExt) {\n    var sidPos = baseUrl.indexOf('/?SID=');\n    var sid = '';\n\n    urlExt = urlExt != undefined ? urlExt : '';\n\n    if (sidPos > -1) {\n        sid = '?' + baseUrl.substring(sidPos + 2);\n        baseUrl = baseUrl.substring(0, sidPos + 1);\n    }\n\n    return baseUrl + urlExt + sid;\n}\n\n/**\n * Formats currency using patern\n * format - JSON (pattern, decimal, decimalsDelimeter, groupsDelimeter)\n * showPlus - true (always show '+'or '-'),\n *      false (never show '-' even if number is negative)\n *      null (show '-' if number is negative)\n */\n\nfunction formatCurrency(price, format, showPlus) {\n    var precision = isNaN(format.precision = Math.abs(format.precision)) ? 2 : format.precision;\n    var requiredPrecision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision;\n\n    //precision = (precision > requiredPrecision) ? precision : requiredPrecision;\n    //for now we don't need this difference so precision is requiredPrecision\n    precision = requiredPrecision;\n\n    var integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired;\n\n    var decimalSymbol = format.decimalSymbol == undefined ? ',' : format.decimalSymbol;\n    var groupSymbol = format.groupSymbol == undefined ? '.' : format.groupSymbol;\n    var groupLength = format.groupLength == undefined ? 3 : format.groupLength;\n\n    var s = '';\n\n    if (showPlus == undefined || showPlus == true) {\n        s = price < 0 ? '-' :  showPlus ? '+' : '';\n    } else if (showPlus == false) {\n        s = '';\n    }\n\n    var i = parseInt(price = Math.abs(+price || 0).toFixed(precision)) + '';\n    var pad = i.length < integerRequired ? integerRequired - i.length : 0;\n\n    while (pad) {\n        i = '0' + i; pad--;\n    }\n    j = (j = i.length) > groupLength ? j % groupLength : 0;\n    re = new RegExp('(\\\\d{' + groupLength + '})(?=\\\\d)', 'g');\n\n    /**\n     * replace(/-/, 0) is only for fixing Safari bug which appears\n     * when Math.abs(0).toFixed() executed on \"0\" number.\n     * Result is \"0.-0\" :(\n     */\n    var r = (j ? i.substr(0, j) + groupSymbol : '') + i.substr(j).replace(re, '$1' + groupSymbol) + (precision ? decimalSymbol + Math.abs(price - i).toFixed(precision).replace(/-/, 0).slice(2) : '');\n    var pattern = '';\n\n    if (format.pattern.indexOf('{sign}') == -1) {\n        pattern = s + format.pattern;\n    } else {\n        pattern = format.pattern.replace('{sign}', s);\n    }\n\n    return pattern.replace('%s', r).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n\nfunction expandDetails(el, childClass) {\n    if (Element.hasClassName(el, 'show-details')) {\n        $$(childClass).each(function (item) {\n            item.hide();\n        });\n        Element.removeClassName(el, 'show-details');\n    } else {\n        $$(childClass).each(function (item) {\n            item.show();\n        });\n        Element.addClassName(el, 'show-details');\n    }\n}\n\n// Version 1.0\nvar isIE = navigator.appVersion.match(/MSIE/) == 'MSIE';\n\nif (!window.Varien)\n    var Varien = new Object();\n\nVarien.showLoading = function () {\n    var loader = $('loading-process');\n\n    loader && loader.show();\n};\nVarien.hideLoading = function () {\n    var loader = $('loading-process');\n\n    loader && loader.hide();\n};\nVarien.GlobalHandlers = {\n    onCreate: function () {\n        Varien.showLoading();\n    },\n\n    onComplete: function () {\n        if (Ajax.activeRequestCount == 0) {\n            Varien.hideLoading();\n        }\n    }\n};\n\nAjax.Responders.register(Varien.GlobalHandlers);\n\n/**\n * Quick Search form client model\n */\nVarien.searchForm = Class.create();\nVarien.searchForm.prototype = {\n    initialize: function (form, field, emptyText) {\n        this.form   = $(form);\n        this.field  = $(field);\n        this.emptyText = emptyText;\n\n        Event.observe(this.form,  'submit', this.submit.bind(this));\n        Event.observe(this.field, 'focus', this.focus.bind(this));\n        Event.observe(this.field, 'blur', this.blur.bind(this));\n        this.blur();\n    },\n\n    submit: function (event) {\n        if (this.field.value == this.emptyText || this.field.value == '') {\n            Event.stop(event);\n\n            return false;\n        }\n\n        return true;\n    },\n\n    focus: function (event) {\n        if (this.field.value == this.emptyText) {\n            this.field.value = '';\n        }\n\n    },\n\n    blur: function (event) {\n        if (this.field.value == '') {\n            this.field.value = this.emptyText;\n        }\n    }\n};\n\nVarien.DateElement = Class.create();\nVarien.DateElement.prototype = {\n    initialize: function (type, content, required, format) {\n        if (type == 'id') {\n            // id prefix\n            this.day    = $(content + 'day');\n            this.month  = $(content + 'month');\n            this.year   = $(content + 'year');\n            this.full   = $(content + 'full');\n            this.advice = $(content + 'date-advice');\n        } else if (type == 'container') {\n            // content must be container with data\n            this.day    = content.day;\n            this.month  = content.month;\n            this.year   = content.year;\n            this.full   = content.full;\n            this.advice = content.advice;\n        } else {\n            return;\n        }\n\n        this.required = required;\n        this.format   = format;\n\n        this.day.addClassName('validate-custom');\n        this.day.validate = this.validate.bind(this);\n        this.month.addClassName('validate-custom');\n        this.month.validate = this.validate.bind(this);\n        this.year.addClassName('validate-custom');\n        this.year.validate = this.validate.bind(this);\n\n        this.setDateRange(false, false);\n        this.year.setAttribute('autocomplete', 'off');\n\n        this.advice.hide();\n    },\n    validate: function () {\n        var error = false,\n            day   = parseInt(this.day.value, 10)   || 0,\n            month = parseInt(this.month.value, 10) || 0,\n            year  = parseInt(this.year.value, 10)  || 0;\n\n        if (this.day.value.strip().empty() &&\n            this.month.value.strip().empty() &&\n            this.year.value.strip().empty()\n        ) {\n            if (this.required) {\n                error = 'Please enter a date.';\n            } else {\n                this.full.value = '';\n            }\n        } else if (!day || !month || !year) {\n            error = 'Please enter a valid full date.';\n        } else {\n            var date = new Date,\n countDaysInMonth = 0,\n errorType = null;\n\n            date.setYear(year); date.setMonth(month - 1); date.setDate(32);\n            countDaysInMonth = 32 - date.getDate();\n\n            if (!countDaysInMonth || countDaysInMonth > 31) countDaysInMonth = 31;\n\n            if (day < 1 || day > countDaysInMonth) {\n                errorType = 'day';\n                error = 'Please enter a valid day (1-%1).';\n            } else if (month < 1 || month > 12) {\n                errorType = 'month';\n                error = 'Please enter a valid month (1-12).';\n            } else {\n                if (day % 10 == day) this.day.value = '0' + day;\n\n                if (month % 10 == month) this.month.value = '0' + month;\n                this.full.value = this.format.replace(/%[mb]/i, this.month.value).replace(/%[de]/i, this.day.value).replace(/%y/i, this.year.value);\n                var testFull = this.month.value + '/' + this.day.value + '/' + this.year.value;\n                var test = new Date(testFull);\n\n                if (isNaN(test)) {\n                    error = 'Please enter a valid date.';\n                } else {\n                    this.setFullDate(test);\n                }\n            }\n            var valueError = false;\n\n            if (!error && !this.validateData()) {//(year<1900 || year>curyear) {\n                errorType = this.validateDataErrorType;//'year';\n                valueError = this.validateDataErrorText;//'Please enter a valid year (1900-%d).';\n                error = valueError;\n            }\n        }\n\n        if (error !== false) {\n            if (jQuery.mage.__) {\n                error = jQuery.mage.__(error);\n            }\n\n            if (!valueError) {\n                this.advice.innerHTML = error.replace('%1', countDaysInMonth);\n            } else {\n                this.advice.innerHTML = this.errorTextModifier(error);\n            }\n            this.advice.show();\n\n            return false;\n        }\n\n        // fixing elements class\n        this.day.removeClassName('validation-failed');\n        this.month.removeClassName('validation-failed');\n        this.year.removeClassName('validation-failed');\n\n        this.advice.hide();\n\n        return true;\n    },\n    validateData: function () {\n        var year = this.fullDate.getFullYear();\n        var date = new Date;\n\n        this.curyear = date.getFullYear();\n\n        return year >= 1900 && year <= this.curyear;\n    },\n    validateDataErrorType: 'year',\n    validateDataErrorText: 'Please enter a valid year (1900-%1).',\n    errorTextModifier: function (text) {\n        return text.replace('%1', this.curyear);\n    },\n    setDateRange: function (minDate, maxDate) {\n        this.minDate = minDate;\n        this.maxDate = maxDate;\n    },\n    setFullDate: function (date) {\n        this.fullDate = date;\n    }\n};\n\nVarien.DOB = Class.create();\nVarien.DOB.prototype = {\n    initialize: function (selector, required, format) {\n        var el = $$(selector)[0];\n        var container       = {};\n\n        container.day       = Element.select(el, '.dob-day input')[0];\n        container.month     = Element.select(el, '.dob-month input')[0];\n        container.year      = Element.select(el, '.dob-year input')[0];\n        container.full      = Element.select(el, '.dob-full input')[0];\n        container.advice    = Element.select(el, '.validation-advice')[0];\n\n        new Varien.DateElement('container', container, required, format);\n    }\n};\n\nVarien.dateRangeDate = Class.create();\nVarien.dateRangeDate.prototype = Object.extend(new Varien.DateElement(), {\n    validateData: function () {\n        var validate = true;\n\n        if (this.minDate || this.maxValue) {\n            if (this.minDate) {\n                this.minDate = new Date(this.minDate);\n                this.minDate.setHours(0);\n\n                if (isNaN(this.minDate)) {\n                    this.minDate = new Date('1/1/1900');\n                }\n                validate = validate && this.fullDate >= this.minDate;\n            }\n\n            if (this.maxDate) {\n                this.maxDate = new Date(this.maxDate);\n                this.minDate.setHours(0);\n\n                if (isNaN(this.maxDate)) {\n                    this.maxDate = new Date();\n                }\n                validate = validate && this.fullDate <= this.maxDate;\n            }\n\n            if (this.maxDate && this.minDate) {\n                this.validateDataErrorText = 'Please enter a valid date between %s and %s';\n            } else if (this.maxDate) {\n                this.validateDataErrorText = 'Please enter a valid date less than or equal to %s';\n            } else if (this.minDate) {\n                this.validateDataErrorText = 'Please enter a valid date equal to or greater than %s';\n            } else {\n                this.validateDataErrorText = '';\n            }\n        }\n\n        return validate;\n    },\n    validateDataErrorText: 'Date should be between %s and %s',\n    errorTextModifier: function (text) {\n        if (this.minDate) {\n            text = text.sub('%s', this.dateFormat(this.minDate));\n        }\n\n        if (this.maxDate) {\n            text = text.sub('%s', this.dateFormat(this.maxDate));\n        }\n\n        return text;\n    },\n    dateFormat: function (date) {\n        return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();\n    }\n});\n\nVarien.FileElement = Class.create();\nVarien.FileElement.prototype = {\n    initialize: function (id) {\n        this.fileElement = $(id);\n        this.hiddenElement = $(id + '_value');\n\n        this.fileElement.observe('change', this.selectFile.bind(this));\n    },\n    selectFile: function (event) {\n        this.hiddenElement.value = this.fileElement.getValue();\n    }\n};\n\nValidation.addAllThese([\n    ['validate-custom', ' ', function (v, elm) {\n        return elm.validate();\n    }]\n]);\n\nElement.addMethods({\n    getInnerText: function (element) {\n        element = $(element);\n\n        if (element.innerText && !Prototype.Browser.Opera) {\n            return element.innerText;\n        }\n\n        return element.innerHTML.stripScripts().unescapeHTML().replace(/[\\n\\r\\s]+/g, ' ').strip();\n    }\n});\n\n/**\n * Executes event handler on the element. Works with event handlers attached by Prototype,\n * in a browser-agnostic fashion.\n * @param element The element object\n * @param event Event name, like 'change'\n *\n * @example fireEvent($('my-input', 'click'));\n */\nfunction fireEvent(element, event) {\n    // dispatch event\n    var evt = document.createEvent('HTMLEvents');\n\n    evt.initEvent(event, true, true); // event type, bubbling, cancelable\n    return element.dispatchEvent(evt);\n\n}\n\n/**\n * Returns more accurate results of floating-point modulo division\n * E.g.:\n * 0.6 % 0.2 = 0.19999999999999996\n * modulo(0.6, 0.2) = 0\n *\n * @param dividend\n * @param divisor\n */\nfunction modulo(dividend, divisor) {\n    var epsilon = divisor / 10000;\n    var remainder = dividend % divisor;\n\n    if (Math.abs(remainder - divisor) < epsilon || Math.abs(remainder) < epsilon) {\n        remainder = 0;\n    }\n\n    return remainder;\n}\n\n/**\n * createContextualFragment is not supported in IE9. Adding its support.\n */\nif (typeof Range != 'undefined' && !Range.prototype.createContextualFragment) {\n    Range.prototype.createContextualFragment = function (html) {\n        var frag = document.createDocumentFragment(),\n        div = document.createElement('div');\n\n        frag.appendChild(div);\n        div.outerHTML = html;\n\n        return frag;\n    };\n}\n\n/**\n * Convert byte count to float KB/MB format\n *\n * @param int $bytes\n * @return string\n */\nvar byteConvert = function (bytes) {\n    if (isNaN(bytes)) {\n        return '';\n    }\n    var symbols = ['bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    var exp = Math.floor(Math.log(bytes) / Math.log(2));\n\n    if (exp < 1) {\n        exp = 0;\n    }\n    var i = Math.floor(exp / 10);\n\n    bytes /= Math.pow(2, 10 * i);\n\n    if (bytes.toString().length > bytes.toFixed(2).toString().length) {\n        bytes = bytes.toFixed(2);\n    }\n\n    return bytes + ' ' + symbols[i];\n};\n"}
}});

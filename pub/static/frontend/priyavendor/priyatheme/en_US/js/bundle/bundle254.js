require.config({"config": {
        "jsbuild":{"mage/adminhtml/varienLoader.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nvar SessionError = Class.create();\n\nSessionError.prototype = {\n    initialize: function (errorText) {\n        this.errorText = errorText;\n    },\n    toString: function () {\n        return 'Session Error:' + this.errorText;\n    }\n};\n\nAjax.Request.addMethods({\n    initialize: function ($super, url, options) {\n        $super(options);\n        this.transport = Ajax.getTransport();\n\n        if (!url.match(new RegExp('[?&]isAjax=true',''))) {\n            url = url.match(new RegExp('\\\\?','g')) ? url + '&isAjax=true' : url + '?isAjax=true';\n        }\n\n        if (Object.isString(this.options.parameters) &&\n            this.options.parameters.indexOf('form_key=') == -1\n        ) {\n            this.options.parameters += '&' + Object.toQueryString({\n                form_key: FORM_KEY\n            });\n        } else {\n            if (!this.options.parameters) {\n                this.options.parameters = {\n                    form_key: FORM_KEY\n                };\n            }\n\n            if (!this.options.parameters.form_key) {\n                this.options.parameters.form_key = FORM_KEY;\n            }\n        }\n\n        this.request(url);\n    },\n    respondToReadyState: function (readyState) {\n        var state = Ajax.Request.Events[readyState],\n response = new Ajax.Response(this);\n\n        if (state == 'Complete') {\n            try {\n                this._complete = true;\n\n                if (response.responseText.isJSON()) {\n                    var jsonObject = response.responseText.evalJSON();\n\n                    if (jsonObject.ajaxExpired && jsonObject.ajaxRedirect) {\n                        window.location.replace(jsonObject.ajaxRedirect);\n                        throw new SessionError('session expired');\n                    }\n                }\n\n                (this.options['on' + response.status] ||\n                 this.options['on' + (this.success() ? 'Success' : 'Failure')] ||\n                 Prototype.emptyFunction)(response, response.headerJSON);\n            } catch (e) {\n                this.dispatchException(e);\n\n                if (e instanceof SessionError) {\n                    return;\n                }\n            }\n\n            var contentType = response.getHeader('Content-type');\n\n            if (this.options.evalJS == 'force' ||\n                this.options.evalJS && this.isSameOrigin() && contentType &&\n                contentType.match(/^\\s*(text|application)\\/(x-)?(java|ecma)script(;.*)?\\s*$/i)) {\n                this.evalResponse();\n            }\n        }\n\n        try {\n            (this.options['on' + state] || Prototype.emptyFunction)(response, response.headerJSON);\n            Ajax.Responders.dispatch('on' + state, this, response, response.headerJSON);\n        } catch (e) {\n            this.dispatchException(e);\n        }\n\n        if (state == 'Complete') {\n            // avoid memory leak in MSIE: clean up\n            this.transport.onreadystatechange = Prototype.emptyFunction;\n        }\n    }\n});\n\nAjax.Updater.respondToReadyState = Ajax.Request.respondToReadyState;\n\nvar varienLoader = new Class.create();\n\nvarienLoader.prototype = {\n    initialize: function (caching) {\n        this.callback = false;\n        this.cache   = $H();\n        this.caching = caching || false;\n        this.url     = false;\n    },\n\n    getCache: function (url) {\n        if (this.cache.get(url)) {\n            return this.cache.get(url);\n        }\n\n        return false;\n    },\n\n    load: function (url, params, callback) {\n        this.url      = url;\n        this.callback = callback;\n\n        if (this.caching) {\n            var transport = this.getCache(url);\n\n            if (transport) {\n                this.processResult(transport);\n\n                return;\n            }\n        }\n\n        if (typeof params.updaterId != 'undefined') {\n            new varienUpdater(params.updaterId, url, {\n                evalScripts: true,\n                onComplete: this.processResult.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        } else {\n            new Ajax.Request(url,{\n                method: 'post',\n                parameters: params || {},\n                onComplete: this.processResult.bind(this),\n                onFailure: this._processFailure.bind(this)\n            });\n        }\n    },\n\n    _processFailure: function (transport) {\n        location.href = BASE_URL;\n    },\n\n    processResult: function (transport) {\n        if (this.caching) {\n            this.cache.set(this.url, transport);\n        }\n\n        if (this.callback) {\n            this.callback(transport.responseText);\n        }\n    }\n};\n\nif (!window.varienLoaderHandler)\n    var varienLoaderHandler = new Object();\n\nvarienLoaderHandler.handler = {\n    onCreate: function (request) {\n        if (request.options.loaderArea === false) {\n            return;\n        }\n\n        jQuery('body').trigger('processStart');\n    },\n    onException: function (transport) {\n        jQuery('body').trigger('processStop');\n    },\n    onComplete: function (transport) {\n        jQuery('body').trigger('processStop');\n    }\n};\n\n/**\n * @todo need calculate middle of visible area and scroll bind\n */\nfunction setLoaderPosition() {\n    var elem = $('loading_mask_loader');\n\n    if (elem && Prototype.Browser.IE) {\n        var elementDims = elem.getDimensions();\n        var viewPort = document.viewport.getDimensions();\n        var offsets = document.viewport.getScrollOffsets();\n\n        elem.style.left = Math.floor(viewPort.width / 2 + offsets.left - elementDims.width / 2) + 'px';\n        elem.style.top = Math.floor(viewPort.height / 2 + offsets.top - elementDims.height / 2) + 'px';\n        elem.style.position = 'absolute';\n    }\n}\n\nfunction toggleSelectsUnderBlock(block, flag) {\n    if (Prototype.Browser.IE) {\n        var selects = document.getElementsByTagName('select');\n\n        for (var i = 0; i < selects.length; i++) {\n            /**\n             * @todo: need check intersection\n             */\n            if (flag) {\n                if (selects[i].needShowOnSuccess) {\n                    selects[i].needShowOnSuccess = false;\n                    // Element.show(selects[i])\n                    selects[i].style.visibility = '';\n                }\n            } else if (Element.visible(selects[i])) {\n                // Element.hide(selects[i]);\n                selects[i].style.visibility = 'hidden';\n                selects[i].needShowOnSuccess = true;\n            }\n        }\n    }\n}\n\nAjax.Responders.register(varienLoaderHandler.handler);\n\nvar varienUpdater = Class.create(Ajax.Updater, {\n    updateContent: function ($super, responseText) {\n        if (responseText.isJSON()) {\n            var responseJSON = responseText.evalJSON();\n\n            if (responseJSON.ajaxExpired && responseJSON.ajaxRedirect) {\n                window.location.replace(responseJSON.ajaxRedirect);\n            }\n        } else {\n            $super(responseText);\n        }\n    }\n});\n"}
}});
